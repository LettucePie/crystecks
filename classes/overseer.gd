extends Object
class_name Overseer
## The Overseer manages/records all flags/events throughout a game

enum EVENT_TYPE {
	TURN, ENTITY, ABILITY, SPEED, QUANTITY, TIMING,
	OWNERSHIP, CONTROL,
	DECK, HAND, CARD, ZONE,
	CUSTOM
}
enum TURN_FLAGS {
	GAME_START, GAME_END, 
	THIS_TURN, PREVIOUS_TURN, THIS_GAME,
	TURN_START, TURN_CHARGE, TURN_END
}
enum ENTITY_TYPE {
	PLAYER, CARD, DECK, HAND, 
	BATTLEFIELD, GLITTER_POUCH, SHADOW,
	MANIFESTATION, ENCANTATION,
	FIEND, CHARM, SPELL, CANTRIP,
	SHIMMER
}
enum ABILITY_ACTIONS {
	PLAY, MANIFEST, CHANT, CHARM,
	STAMP, DENY, TARGET, SHATTER, BANISH, STEAL,
	DAMAGE, GAIN_LIFE, LOSE_LIFE, 
	ATTACK, BLOCK, CHARGE, EXHAUST,
	WIN, LOSE
}
enum ACTION_SPEED {
	FRESH, IN_RESPONSE
}
enum QUANTITY_FLAGS {
	ANY_AMOUNT, SINGLE, MULTIPLE, NONE
}
enum TIMING_FLAGS {
	PRESENT, PAST_TENSE, POST_TENSE
}
enum OWNERSHIP_FLAGS {
	HOST_PLAYER, OPPONENT_PLAYER, ANY_PLAYER
}
enum CONTROL_FLAGS {
	HOST_PLAYER, OPPONENT_PLAYER, ANY_PLAYER
}
enum DECK_ACTIONS {
	INITIALIZE, SHUFFLE, SEARCH, CHECK, TOP_REVEAL
}
enum HAND_ACTIONS {
	MULLIGAN, DRAW, REVEAL
}
enum CARD_ACTIONS {
	PLAY_FROM_HAND, PLAY_FROM_GLITTER_POUCH, PLAY_FROM_SHADOW, DISCARD
}
enum ZONE_ACTIONS {
	ENTER, LEAVE
}
var CUSTOM_FLAGS : PackedStringArray = []


var event_enum_table : Array = [
	TURN_FLAGS, ENTITY_TYPE, ABILITY_ACTIONS, ACTION_SPEED, QUANTITY_FLAGS, TIMING_FLAGS,
	OWNERSHIP_FLAGS, CONTROL_FLAGS, DECK_ACTIONS, HAND_ACTIONS, CARD_ACTIONS, ZONE_ACTIONS
]


class EventPair:
	var event_type : EVENT_TYPE
	var event_flag : int
	
	func _init(arg1, arg2):
		event_type = arg1
		event_flag = arg2


class GameEvent:
	var turn_id : int
	var event_pair : EventPair
	var host_entities : Array[Entity]
	var target_entities : Array[Entity]


var event_log : Array[GameEvent] = []
var turn_id : int = 0

func log_event(args : Array):
	pass
