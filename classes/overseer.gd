extends Object
class_name Overseer
## The Overseer manages/records all flags/events throughout a game

enum EVENT_TYPE {
	TIME, PLAYER_STATUS, 
	PLAYER_DECK, PLAYER_HAND, PLAYER_ZONES,
	CARD, CRYSTAL, MANIFESTATION, ENCANTATION,
	FIEND, CHARM, SPELL, CANTRIP, ACTIONS,
	CUSTOM
}
enum TIME_FLAGS {
	GAME_START, GAME_END, THIS_TURN, PREVIOUS_TURN, THIS_GAME,
	PLAYER_START, PLAYER_CHARGED, PLAYER_TURN, PLAYER_END, 
	OPPONENT_START, OPPONENT_CHARGED, OPPONENT_TURN, OPPONENT_END,
	TURN_START, TURN_CHARGED, TURN_END
}
enum STATUS_FLAGS {
	PLAYER_GAINED, PLAYER_LOST, PLAYER_TARGETED, PLAYER_CHARMED,
	OPPONENT_GAINED, OPPONENT_LOST, OPPONENT_TARGETED, OPPONENT_CHARMED
}
enum DECK_FLAGS {
	INITIALIZED, SHUFFLED, SEARCHED, CHECKED, TOP_REVEALED
}
enum HAND_FLAGS {
	MULLIGAN, DRAWN, REVEALED
}
enum ZONE_FLAGS {
	MANIFESTATION_ENTERED_BATTLEFIELD, MANIFESTATION_LEFT_BATTLEFIELD,
	MANIFESTATION_ENTERED_GLITTERPOUCH, MANIFESTATION_LEFT_GLITTERPOUCH,
	MANIFESTATION_ENTERED_SHADOW, MANIFESTATION_LEFT_SHADOW,
	CARD_ENTERED_GLITTERPOUCH, CARD_LEFT_GLITTERPOUCH,
	CARD_ENTERED_SHADOW, CARD_LEFT_SHADOW
}
enum CARD_FLAGS {
	ALL_CARDS, PLAYER_CARDS, OPPONENT_CARDS,
	ANY_CARD, PLAYER_CARD, OPPONENT_CARD,
	DISCARDED, BANISHED, PLAYED, DRAWN,
	PLAYED_FROM_HAND, PLAYED_FROM_SHADOW,
	RETURNED_TO_DECK
}
##
## Color Flags
##
enum MANIFESTATION_FLAGS {
	ALL_MANIFESTATIONS, PLAYER_MANIFESTATIONS, OPPONENT_MANIFESTATIONS,
	ANY_MANIFESTATION, PLAYER_MANIFESTATION, OPPONENT_MANIFESTATION,
	MANIFESTED
}
enum ENCANTATION_FLAGS {
	ALL_ENCANTATIONS, PLAYER_ENCANTATIONS, OPPONENT_ENCANTATIONS,
	ANY_ENCANTATION, PLAYER_ENCANTATION, OPPONENT_ENCANTATION,
	CHANTED
}
enum FIEND_FLAGS {
	ALL_FIENDS, PLAYERS_FIENDS, OPPONENTS_FIENDS,
	ANY_FIEND, PLAYER_FIEND, OPPONENT_FIEND,
	ATTACKED, BLOCKED, ATTACKING, BLOCKING
}
enum CHARM_FLAGS {
	ALL_CHARMS, PLAYERS_CHARMS, OPPONENTS_CHARMS,
	ANY_CHARM, PLAYERS_CHARM, OPPONENTS_CHARM,
	BATTLEFIELD_CHARM, FIEND_CHARM, PLAYER_CHARM
}
enum SPELL_FLAGS {
	ALL_SPELLS, PLAYERS_SPELLS, OPPONENTS_SPELLS,
	ANY_SPELL, PLAYER_SPELL, OPPONENT_SPELL,
}
enum CANTRIP_FLAGS {
	ALL_CANTRIPS, PLAYERS_CANTRIPS, OPPONENTS_CANTRIPS,
	ANY_CANTRIP, PLAYER_CANTRIP, OPPONENT_CANTRIP,
	IN_RESPONSE
}
enum ACTION_FLAGS {
	CARD_PLAYED, MANIFESTING, MANIFESTED, CHANTING, CHANTED,
	RESOLVING, RESOLVED, RESOLVES, TARGETED, TARGETING, TARGETS,
	
}
var CUSTOM_FLAGS : PackedStringArray = []


var event_enum_table : Array = [
	TIME_FLAGS, STATUS_FLAGS, DECK_FLAGS, HAND_FLAGS, ZONE_FLAGS,
	CARD_FLAGS, Card.CRYSTAL, MANIFESTATION_FLAGS, ENCANTATION_FLAGS,
	FIEND_FLAGS, CHARM_FLAGS, SPELL_FLAGS, CANTRIP_FLAGS, ACTION_FLAGS,
	CUSTOM_FLAGS
]


class GameEvent:
	var turn_id : int
	var event_type : EVENT_TYPE
	var event_flag : int
	var host_entities : Array[Entity]
	var target_entities : Array[Entity]


var event_log : Array[GameEvent] = []
var turn_id : int = 0

func log_event(args : Array):
	pass
